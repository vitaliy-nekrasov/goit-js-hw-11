{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAKA,MAAMC,EAAoB,IAAI,EAAAF,EAAAG,UACxBC,OAAEC,EAAMC,UAAEC,EAASC,YAAEC,GAAgB,CACzCL,OAAQM,SAASC,cAAc,gBAC/BL,UAAWI,SAASC,cAAc,aAEpC,IAAIC,GAAa,EAoCjBC,eAAeC,EAAcC,SACAR,EAAUS,mBAAmB,YAAaD,GAEvD,IAAIE,EAAAC,GAAJ,CAAmB,cACzBC,GAAG,sB,CA2CbN,eAAeO,EAAcC,GAC3BC,EAAeC,QAAQF,E,CAlFzBhB,EAAOmB,iBAAiB,UAExBX,eAA4BY,GAC1B,IACEA,EAAIC,iBACJxB,EAAkByB,MAAQF,EAAIG,cAAcC,SAASC,YAAYC,YACzC7B,EAAkB8B,kBAmC9CnB,iBAEE,aADsBN,EAAU0B,UAAY,G,CAnCRC,GADlC,MAEMC,QAAiBjC,EAAkBkC,YACvClC,EAAkByB,OAEpB,GAAwB,IAApBQ,EAASE,OACX,OAAOC,EAAAC,OAAOC,QACZ,4EAGJ,MAAMC,QAAsBvC,EAAkBwC,UAC5CxC,EAAkByB,OAEpBW,EAAAC,OAAOI,KAAK,oBAAoBF,aAChC,MAAM1B,QAAeb,EAAkB0C,cAAcT,GAE/CU,SADgB/B,EAAcC,SACfL,SAASC,cAAc,oBAE5C,GADAC,GAAa,EACTA,EAAY,OACQQ,EAAcyB,GACpCjC,GAAa,C,OAoBnBC,iBACE,MAAQiC,OAAQC,GAAerC,SAC5BC,cAAc,QACdqC,kBAAkBC,8BAEAC,OAAOC,SAAS,CACnCC,IAAKL,EACLM,SAAU,U,CAzBWC,E,CACrB,MAAOC,GACPC,QAAQC,IAAIF,E,KAuDhB,MAMMjC,EAAiB,IAAIoC,sBANI,CAACC,EAASC,KACvC,MAAMC,EAAQF,EAAQ,GACjBE,EAAMC,kBA9BbjD,iBACE,IACE,MAAMsB,QAAiBjC,EAAkBkC,YACvClC,EAAkByB,OAEdZ,QAAeb,EAAkB0C,cAAcT,GAE/CU,SADgB/B,EAAcC,SACfL,SAASC,cAAc,oBAC5CC,GAAa,EACTA,IACFQ,EAAcyB,GACdjC,GAAa,GAEXuB,EAASE,OAAS,KACpBC,EAAAC,OAAOwB,QACL,8DAEFzC,EAAe0C,UAAUnB,G,CAE3B,MAAOU,GACPC,QAAQC,IAAIF,E,EAWdU,GACAL,EAASI,UAAUH,EAAMK,QAAO,GAEsC","sources":["src/infinite-scroll-page.js"],"sourcesContent":["import PixabayApiService from './js/pixabay-api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst pixabayApiService = new PixabayApiService();\nconst { formEl, galleryEl, containerEl } = {\n  formEl: document.querySelector('.search-form'),\n  galleryEl: document.querySelector('.gallery'),\n};\nlet isPageLoad = true;\n\nformEl.addEventListener('submit', onSubmitForm);\n\nasync function onSubmitForm(evt) {\n  try {\n    evt.preventDefault();\n    pixabayApiService.query = evt.currentTarget.elements.searchQuery.value;\n    const resetPage = await pixabayApiService.resetPage();\n    const removeGalleryMarkup = await removeGallery();\n    const pictures = await pixabayApiService.getPictures(\n      pixabayApiService.query\n    );\n    if (pictures.length === 0) {\n      return Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    }\n    const totalPictures = await pixabayApiService.totalHits(\n      pixabayApiService.query\n    );\n    Notify.info(`Hooray! We found ${totalPictures} images.`);\n    const markup = await pixabayApiService.galleryMarkup(pictures);\n    const gallery = await createGallery(markup);\n    const lastEl = await document.querySelector('.img:last-child');\n    isPageLoad = true;\n    if (isPageLoad) {\n      const observe = await observeLastEl(lastEl);\n      isPageLoad = false;\n    }\n    const scroll = await startSmoothScroll();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function createGallery(markup) {\n  const createMarkup = await galleryEl.insertAdjacentHTML('beforeend', markup);\n\n  let gallery = new SimpleLightbox('.gallery a');\n  gallery.on('show.simplelightbox');\n}\n\nasync function removeGallery() {\n  const remove = await (galleryEl.innerHTML = '');\n  return remove;\n}\n\nasync function startSmoothScroll() {\n  const { height: cardHeight } = document\n    .querySelector('body')\n    .firstElementChild.getBoundingClientRect();\n\n  const scroll = await window.scrollBy({\n    top: cardHeight,\n    behavior: 'smooth',\n  });\n}\n\nasync function showMoreImg() {\n  try {\n    const pictures = await pixabayApiService.getPictures(\n      pixabayApiService.query\n    );\n    const markup = await pixabayApiService.galleryMarkup(pictures);\n    const gallery = await createGallery(markup);\n    const lastEl = await document.querySelector('.img:last-child');\n    isPageLoad = true;\n    if (isPageLoad) {\n      observeLastEl(lastEl);\n      isPageLoad = false;\n    }\n    if (pictures.length < 39) {\n      Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      infiniteScroll.unobserve(lastEl);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function observeLastEl(element) {\n  infiniteScroll.observe(element);\n}\n\nconst infiniteScrollCallback = (entries, observer) => {\n  const entry = entries[0];\n  if (!entry.isIntersecting) return;\n  showMoreImg();\n  observer.unobserve(entry.target);\n};\nconst infiniteScroll = new IntersectionObserver(infiniteScrollCallback, {});\n"],"names":["$6fOXY","parcelRequire","$8c95da93d4f8238b$var$pixabayApiService","default","formEl","$8c95da93d4f8238b$var$formEl","galleryEl","$8c95da93d4f8238b$var$galleryEl","containerEl","$8c95da93d4f8238b$var$containerEl","document","querySelector","$8c95da93d4f8238b$var$isPageLoad","async","$8c95da93d4f8238b$var$createGallery","markup","insertAdjacentHTML","$parcel$interopDefault","$fZKcF","on","$8c95da93d4f8238b$var$observeLastEl","element","$8c95da93d4f8238b$var$infiniteScroll","observe","addEventListener","evt","preventDefault","query","currentTarget","elements","searchQuery","value","resetPage","innerHTML","$8c95da93d4f8238b$var$removeGallery","pictures","getPictures","length","$iQIUW","Notify","failure","totalPictures","totalHits","info","galleryMarkup","lastEl","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$8c95da93d4f8238b$var$startSmoothScroll","error","console","log","IntersectionObserver","entries","observer","entry","isIntersecting","warning","unobserve","$8c95da93d4f8238b$var$showMoreImg","target"],"version":3,"file":"infinite-scroll-page.97fe3650.js.map"}