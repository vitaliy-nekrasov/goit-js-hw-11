{"mappings":"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","sources":["src/infinite-scroll-page.js"],"sourcesContent":["import PixabayApiService from './js/pixabay-api';\nimport galleryMarkup from './js/gallery-markup';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst pixabayApiService = new PixabayApiService();\nconst { formEl, galleryEl } = {\n  formEl: document.querySelector('.search-form'),\n  galleryEl: document.querySelector('.gallery'),\n};\nlet isPageLoad = true;\n\nformEl.addEventListener('submit', onSubmitForm);\n\nasync function onSubmitForm(evt) {\n  try {\n    evt.preventDefault();\n    pixabayApiService.query =\n      evt.currentTarget.elements.searchQuery.value.trim();\n    if (pixabayApiService.query === '') {\n      return;\n    }\n    const resetPage = await pixabayApiService.resetPage();\n    const removeGalleryMarkup = await removeGallery();\n    const response = await pixabayApiService.getPictures(\n      pixabayApiService.query\n    );\n    const pictures = await response.data.hits;\n    const totalPictures = await response.data.totalHits;\n    Notify.info(`Hooray! We found ${totalPictures} images.`);\n    if (pictures.length === 0) {\n      return Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    }\n\n    const markup = await galleryMarkup(pictures);\n    const gallery = await createGallery(markup);\n    const lastEl = await document.querySelector('.img:last-child');\n    isPageLoad = true;\n    if (isPageLoad) {\n      const observe = await observeLastEl(lastEl);\n      isPageLoad = false;\n    }\n    if (pictures.length < 39) {\n      infiniteScroll.unobserve(lastEl);\n    }\n    const scroll = await startSmoothScroll();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function createGallery(markup) {\n  const createMarkup = await galleryEl.insertAdjacentHTML('beforeend', markup);\n\n  let gallery = new SimpleLightbox('.gallery a');\n  gallery.on('show.simplelightbox');\n}\n\nasync function removeGallery() {\n  const remove = await (galleryEl.innerHTML = '');\n  return remove;\n}\n\nasync function startSmoothScroll() {\n  const { height: cardHeight } = document\n    .querySelector('body')\n    .firstElementChild.getBoundingClientRect();\n\n  const scroll = await window.scrollBy({\n    top: cardHeight,\n    behavior: 'smooth',\n  });\n}\n\nasync function showMoreImg() {\n  try {\n    const response = await pixabayApiService.getPictures(\n      pixabayApiService.query\n    );\n    const pictures = await response.data.hits;\n    const markup = await galleryMarkup(pictures);\n    const gallery = await createGallery(markup);\n    const lastEl = await document.querySelector('.img:last-child');\n    isPageLoad = true;\n    if (isPageLoad) {\n      observeLastEl(lastEl);\n      isPageLoad = false;\n    }\n    if (pictures.length < 39) {\n      Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      infiniteScroll.unobserve(lastEl);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function observeLastEl(element) {\n  infiniteScroll.observe(element);\n}\n\nconst infiniteScrollCallback = (entries, observer) => {\n  const entry = entries[0];\n  if (!entry.isIntersecting) return;\n  showMoreImg();\n  observer.unobserve(entry.target);\n};\nconst infiniteScroll = new IntersectionObserver(infiniteScrollCallback, {});\n"],"names":["$bpxeT","parcelRequire","$b2dcfe898af0bb45$var$pixabayApiService","$8H72y","default","$b2dcfe898af0bb45$var$ref","formEl","document","querySelector","galleryEl","$b2dcfe898af0bb45$var$galleryEl","$b2dcfe898af0bb45$var$_onSubmitForm","$parcel$interopDefault","$2TvXO","mark","_callee","evt","response","pictures","totalPictures","markup","lastEl","preventDefault","query","currentTarget","elements","searchQuery","value","trim","resetPage","_ctx","sent","$b2dcfe898af0bb45$var$removeGallery","getPictures","data","hits","totalHits","$h6c0i","Notify","info","concat","length","failure","$3PHHA","$b2dcfe898af0bb45$var$createGallery","$b2dcfe898af0bb45$var$observeLastEl","$b2dcfe898af0bb45$var$infiniteScroll","unobserve","$b2dcfe898af0bb45$var$startSmoothScroll","console","log","t0","apply","this","arguments","$b2dcfe898af0bb45$var$_createGallery","insertAdjacentHTML","$5IjG7","on","$b2dcfe898af0bb45$var$_removeGallery","remove","innerHTML","$b2dcfe898af0bb45$var$_startSmoothScroll","ref1","cardHeight","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","$b2dcfe898af0bb45$var$_showMoreImg","warning","element","$b2dcfe898af0bb45$var$_observeLastEl","observe","addEventListener","IntersectionObserver","entries","observer","entry","isIntersecting","$b2dcfe898af0bb45$var$showMoreImg","target"],"version":3,"file":"infinite-scroll-page.15a4e405.js.map"}