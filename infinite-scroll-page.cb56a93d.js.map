{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAMA,MAAMC,EAAoB,IAAI,EAAAF,EAAAG,UACxBC,OAAEC,EAAMC,UAAEC,GAAc,CAC5BH,OAAQI,SAASC,cAAc,gBAC/BH,UAAWE,SAASC,cAAc,aAEpC,IAAIC,GAAa,EA6CjBC,eAAeC,EAAcC,SACAN,EAAUO,mBAAmB,YAAaD,GAEvD,IAAIE,EAAAC,GAAJ,CAAmB,cACzBC,GAAG,sB,CA8CbN,eAAeO,EAAcC,GAC3BC,EAAeC,QAAQF,E,CA9FzBd,EAAOiB,iBAAiB,UAExBX,eAA4BY,GAC1B,IACEA,EAAIC,uBACqBC,IAGzB,GAFAvB,EAAkBwB,MAChBH,EAAII,cAAcC,SAASC,YAAYC,MAAMC,OACf,KAA5B7B,EAAkBwB,MACpB,aAEsBxB,EAAkB8B,kBAuC9CrB,iBAEE,aADsBJ,EAAU0B,UAAY,G,CAvCRC,GADlC,MAEMC,QAAiBjC,EAAkBkC,YACvClC,EAAkBwB,OAEdW,QAAiBF,EAASG,KAAKC,KAC/BC,QAAsBL,EAASG,KAAKG,UAE1C,GADAC,EAAAC,OAAOC,KAAK,oBAAoBJ,aACR,IAApBH,EAASQ,OACX,OAAOH,EAAAC,OAAOG,QACZ,4EAIJ,MAAMjC,QAAe,EAAAkC,EAAA5C,SAAckC,GAE7BW,SADgBpC,EAAcC,SACfL,SAASC,cAAc,oBAE5C,GADAC,GAAa,EACTA,EAAY,OACQQ,EAAc8B,GACpCtC,GAAa,C,CAEX2B,EAASQ,OAAS,IACpBzB,EAAe6B,UAAUD,SAqB/BrC,iBACE,MAAQuC,OAAQC,GAAe3C,SAC5BC,cAAc,QACd2C,kBAAkBC,8BAEAC,OAAOC,SAAS,CACnCC,IAAKL,EACLM,SAAU,U,CA1BWC,SACIC,G,CACzB,MAAOC,GACPC,QAAQC,IAAIF,E,KA0DhB,MAMMxC,EAAiB,IAAI2C,sBANI,CAACC,EAASC,KACvC,MAAMC,EAAQF,EAAQ,GACjBE,EAAMC,kBAjCbxD,iBACE,UAC2Bc,IAAzB,MACMU,QAAiBjC,EAAkBkC,YACvClC,EAAkBwB,OAEdW,QAAiBF,EAASG,KAAKC,KAC/B1B,QAAe,EAAAkC,EAAA5C,SAAckC,GAE7BW,SADgBpC,EAAcC,SACfL,SAASC,cAAc,oBAC5CC,GAAa,QACYiD,IACrBjD,IACFQ,EAAc8B,GACdtC,GAAa,GAEX2B,EAASQ,OAAS,KACpBH,EAAAC,OAAOyB,QACL,8DAEFhD,EAAe6B,UAAUD,G,CAE3B,MAAOY,GACPC,QAAQC,IAAIF,E,EAWdS,GACAJ,EAAShB,UAAUiB,EAAMI,QAAO,GAEsC,IAElEC,EAAS/D,SAASC,cAAc,SAQtC,SAASgB,IACP8C,EAAOC,UAAUC,OAAO,O,CAG1B,SAASd,IACPY,EAAOC,UAAUE,IAAI,O,CAXvBpB,OAAOhC,iBAAiB,oBAExB,WACEiD,EAAOC,UAAUE,IAAI,O","sources":["src/infinite-scroll-page.js"],"sourcesContent":["import PixabayApiService from './js/pixabay-api';\nimport galleryMarkup from './js/gallery-markup';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst pixabayApiService = new PixabayApiService();\nconst { formEl, galleryEl } = {\n  formEl: document.querySelector('.search-form'),\n  galleryEl: document.querySelector('.gallery'),\n};\nlet isPageLoad = true;\n\nformEl.addEventListener('submit', onSubmitForm);\n\nasync function onSubmitForm(evt) {\n  try {\n    evt.preventDefault();\n    const showLoader = await loaderShow();\n    pixabayApiService.query =\n      evt.currentTarget.elements.searchQuery.value.trim();\n    if (pixabayApiService.query === '') {\n      return;\n    }\n    const resetPage = await pixabayApiService.resetPage();\n    const removeGalleryMarkup = await removeGallery();\n    const response = await pixabayApiService.getPictures(\n      pixabayApiService.query\n    );\n    const pictures = await response.data.hits;\n    const totalPictures = await response.data.totalHits;\n    Notify.info(`Hooray! We found ${totalPictures} images.`);\n    if (pictures.length === 0) {\n      return Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    }\n\n    const markup = await galleryMarkup(pictures);\n    const gallery = await createGallery(markup);\n    const lastEl = await document.querySelector('.img:last-child');\n    isPageLoad = true;\n    if (isPageLoad) {\n      const observe = await observeLastEl(lastEl);\n      isPageLoad = false;\n    }\n    if (pictures.length < 39) {\n      infiniteScroll.unobserve(lastEl);\n    }\n    const scroll = await startSmoothScroll();\n    const hideLoader = await loaderHide();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function createGallery(markup) {\n  const createMarkup = await galleryEl.insertAdjacentHTML('beforeend', markup);\n\n  let gallery = new SimpleLightbox('.gallery a');\n  gallery.on('show.simplelightbox');\n}\n\nasync function removeGallery() {\n  const remove = await (galleryEl.innerHTML = '');\n  return remove;\n}\n\nasync function startSmoothScroll() {\n  const { height: cardHeight } = document\n    .querySelector('body')\n    .firstElementChild.getBoundingClientRect();\n\n  const scroll = await window.scrollBy({\n    top: cardHeight,\n    behavior: 'smooth',\n  });\n}\n\nasync function showMoreImg() {\n  try {\n    const showLoader = await loaderShow();\n    const response = await pixabayApiService.getPictures(\n      pixabayApiService.query\n    );\n    const pictures = await response.data.hits;\n    const markup = await galleryMarkup(pictures);\n    const gallery = await createGallery(markup);\n    const lastEl = await document.querySelector('.img:last-child');\n    isPageLoad = true;\n    const hideLoader = await loaderHide();\n    if (isPageLoad) {\n      observeLastEl(lastEl);\n      isPageLoad = false;\n    }\n    if (pictures.length < 39) {\n      Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      infiniteScroll.unobserve(lastEl);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function observeLastEl(element) {\n  infiniteScroll.observe(element);\n}\n\nconst infiniteScrollCallback = (entries, observer) => {\n  const entry = entries[0];\n  if (!entry.isIntersecting) return;\n  showMoreImg();\n  observer.unobserve(entry.target);\n};\nconst infiniteScroll = new IntersectionObserver(infiniteScrollCallback, {});\n\nconst maskEl = document.querySelector('.mask');\n\nwindow.addEventListener('DOMContentLoaded', onWindowLoad);\n\nfunction onWindowLoad() {\n  maskEl.classList.add('hide');\n}\n\nfunction loaderShow() {\n  maskEl.classList.remove('hide');\n}\n\nfunction loaderHide() {\n  maskEl.classList.add('hide');\n}\n"],"names":["$6fOXY","parcelRequire","$8c95da93d4f8238b$var$pixabayApiService","default","formEl","$8c95da93d4f8238b$var$formEl","galleryEl","$8c95da93d4f8238b$var$galleryEl","document","querySelector","$8c95da93d4f8238b$var$isPageLoad","async","$8c95da93d4f8238b$var$createGallery","markup","insertAdjacentHTML","$parcel$interopDefault","$fZKcF","on","$8c95da93d4f8238b$var$observeLastEl","element","$8c95da93d4f8238b$var$infiniteScroll","observe","addEventListener","evt","preventDefault","$8c95da93d4f8238b$var$loaderShow","query","currentTarget","elements","searchQuery","value","trim","resetPage","innerHTML","$8c95da93d4f8238b$var$removeGallery","response","getPictures","pictures","data","hits","totalPictures","totalHits","$iQIUW","Notify","info","length","failure","$iF2Nc","lastEl","unobserve","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$8c95da93d4f8238b$var$startSmoothScroll","$8c95da93d4f8238b$var$loaderHide","error","console","log","IntersectionObserver","entries","observer","entry","isIntersecting","warning","$8c95da93d4f8238b$var$showMoreImg","target","$8c95da93d4f8238b$var$maskEl","classList","remove","add"],"version":3,"file":"infinite-scroll-page.cb56a93d.js.map"}